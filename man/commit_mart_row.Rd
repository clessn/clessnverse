% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dev_t.R
\name{commit_mart_row}
\alias{commit_mart_row}
\title{clessnverse::commit_mart_row}
\usage{
commit_mart_row(table_name, key, row = list(), mode = "refresh", credentials)
}
\arguments{
\item{table_name}{The name of the data mart table to write an observation to
without the 'chlub_tables_mart' prefix.}

\item{key}{A character string containing the unique primary key of this
observation in the table.  Data integrity of the CLESSN data
model is maintained by having a unique key per observation in
each table.}

\item{row}{A named list containing the observation to write to the datamart
table.  The names of the list \emph{are the columns} of the table.}

\item{mode}{A character string cintaining either "refresh" or "append".
If mode = "refresh" then if an observation with a key = key
already exists in the table, it will be overwritten with the
new values.
If mode = "append" then it will be added to the table.  However
if an existing observation with a key = key already exists in the
table, a warning will be returned.}

\item{credentials}{The hublot credentials obtained from the
hublot::get_credentials function}
}
\value{
returns a dataframe containing the data warehouse table with a JSON
attribute as well as a document.id and creation & update time stamps
}
\description{
commit_mart_row allows the programmer to write a row in a data
table of a CLESSN data mart.
}
\examples{

# connect to hublot
credentials <- hublot::get_credentials(
  Sys.getenv("HUB3_URL"),
  Sys.getenv("HUB3_USERNAME"),
  Sys.getenv("HUB3_PASSWORD")
  )


clessnverse::commit_mart_row(
  table_name = "political_parties_press_releases_freq",
  key = "QS212022",
  row = list(week_num=21, count=6, political_party="QS"),
  mode = "refresh",
  credentials = credentials)

}
